export declare type UrlNode = {
    type: string;
    title: string;
    treePath: readonly number[];
    rawUrl?: string;
    path?: string;
    route?: string;
    ghUrl?: string;
    name?: string;
    id?: string;
    children?: UrlNode[];
    extension?: string;
};
export declare type FlatNode = {
    treePath: number[];
    rawUrl: string;
    ghUrl: string;
    route: string;
    path: string;
    title: string;
    next?: {
        title: string;
        route: string;
    };
    prev?: {
        title: string;
        route: string;
    };
    index: number;
};
export declare type FlatNodes = FlatNode[];
export declare function getAllRoutesInfo(urlTrees: UrlNode[]): Partial<Record<string, FlatNode>>;
export declare function getYamlUrlTree(location: string): Promise<string>;
export declare function getRoutesInfo(root: UrlNode, index: number): Record<string, FlatNode>;
export declare function getMdSource({ rawUrl, path: localPath }: FlatNode, local?: boolean): Promise<string>;
